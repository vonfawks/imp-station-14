- type: entity
  name: fishing rod
  parent: BaseItem
  id: FishingRodBase
  components:
    - type: FishingRod #The component that handles all the joint stuff
    - type: Gun #The component that handles the firing
      soundGunshot: /Audio/Weapons/Guns/Gunshots/harpoon.ogg
      fireRate: 0.5
      clumsyProof: true
    - type: BasicEntityAmmoProvider #The component that handles whats being fired
      proto: FishingHookBase
      capacity: 1
    - type: AmmoCounter #The component that adds the ui element to if the hook is attached or not
    - type: UseDelay #The component that prevents the server from being spammed too much
      delay: 1.5
    - type: Appearance #The component that gives the item a visual
    - type: Sprite #The component that contains the visual itself
      sprite: _Impstation/Objects/Fishing/fishingrod.rsi
      layers:
        - state: base
        - state: base-unshaded
          map: [ "unshaded" ]
          visible: true
    - type: GenericVisualizer #The component that handles multiple states for the sprite
      visuals:
        enum.TetherVisualsStatus.Key:
          unshaded:
            True: { state: base-unshaded }
            False: { state: base-unshaded-off }         
    - type: Construction
      graph: FishingRod
      node: rod

- type: entity
  name: plasma rod
  parent: FishingRodBase
  id: FishingRodPlasma
  components:
    - type: BasicEntityAmmoProvider #The component that handles whats being fired
      proto: FishingHookPlasma
      capacity: 1
    - type: Sprite #The component that contains the visual itself
      sprite: _Impstation/Objects/Fishing/fishingrod_plasma.rsi
      layers:
        - state: base
        - state: base-unshaded
          map: [ "unshaded" ]
          visible: true